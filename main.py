import requests
import asyncio
from aiogram import Bot, Dispatcher, Router
from aiogram.types import Message
from aiogram.filters import Command

# --- –ö–æ–Ω—Ñ–∏–≥–∏ ---
TELEGRAM_TOKEN = "723599629:AAHY-BnqxjcfqVCBPlLzShzHzx0yuTh17O4"
DIFY_API_KEY = "app-5wIRMmbNQl4E0aoaKLf2YgHd"
DIFY_BASE_URL = "https://api.dify.ai/v1"

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher()
router = Router()
dp.include_router(router)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –¥–∏–∞–ª–æ–≥–æ–≤
user_conversations = {}

def ask_dify(query: str, user_id: str = "telegram_user") -> str:
    url = f"{DIFY_BASE_URL}/chat-messages"
    headers = {
        "Authorization": f"Bearer {DIFY_API_KEY}",
        "Content-Type": "application/json"
    }

    payload = {
        "inputs": {},
        "query": query,
        "response_mode": "blocking",
        "user": user_id
    }

    # –¥–æ–±–∞–≤–ª—è–µ–º conversation_id —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if user_id in user_conversations:
        payload["conversation_id"] = user_conversations[user_id]

    response = requests.post(url, json=payload, headers=headers)

    if response.status_code == 200:
        data = response.json()

        # —Å–æ—Ö—Ä–∞–Ω—è–µ–º conversation_id, –µ—Å–ª–∏ –æ–Ω –ø—Ä–∏—à—ë–ª
        if "conversation_id" in data:
            user_conversations[user_id] = data["conversation_id"]

        return data.get("answer", "‚ùå –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç Dify")
    else:
        return f"‚ö†Ô∏è –û—à–∏–±–∫–∞ Dify: {response.text}"


# –•—ç–Ω–¥–ª–µ—Ä –∫–æ–º–∞–Ω–¥—ã /start
@router.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç üëã –Ø –±–æ—Ç, —Ä–∞–±–æ—Ç–∞—é —Ç–æ–ª—å–∫–æ –¥–ª—è –ê–±–¥—É–ª–ª–∞—Ö–∞. –ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å!")


# –•—ç–Ω–¥–ª–µ—Ä –ª—é–±—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@router.message()
async def handle_message(message: Message):
    user_text = message.text
    reply = ask_dify(user_text, str(message.from_user.id))
    await message.answer(reply)


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
